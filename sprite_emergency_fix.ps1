# sprite_emergency_fix.ps1 - Soluci√≥n de emergencia para sprites
Write-Host "üö® SOLUCI√ìN DE EMERGENCIA - SPRITES NO CARGAN" -ForegroundColor Red
Write-Host "=============================================" -ForegroundColor Red
Write-Host ""

Write-Host "‚ùå DIAGN√ìSTICO CONFIRMADO:" -ForegroundColor Yellow
Write-Host "  ‚Ä¢ TestSpriteRobust: 0/4 sprites cargados en TODOS los m√©todos"
Write-Host "  ‚Ä¢ load() fall√≥ ‚ùå"
Write-Host "  ‚Ä¢ ResourceLoader.load() fall√≥ ‚ùå"
Write-Host "  ‚Ä¢ preload() requiere compilaci√≥n ‚ùå"
Write-Host "  ‚Ä¢ FileSystem verification fall√≥ ‚ùå"
Write-Host ""
Write-Host "üí° CONCLUSI√ìN: Tus PNG tienen formato incompatible con Godot" -ForegroundColor Red
Write-Host ""

Write-Host "üîß SOLUCI√ìN IMPLEMENTADA:" -ForegroundColor Green
Write-Host "  ‚úÖ GenerateCompatibleSprites.gd - Genera sprites compatibles"
Write-Host "  ‚úÖ CreateTestSprites.tscn - Crea sprites de prueba visual"
Write-Host "  ‚úÖ Reemplazar√° temporalmente tus PNG problem√°ticos"
Write-Host ""

Write-Host "üöÄ PASOS PARA SOLUCIONAR:" -ForegroundColor Cyan
Write-Host "  OPCI√ìN A - Generaci√≥n autom√°tica (RECOMENDADO):"
Write-Host "    1. En Godot: File ‚Üí Run Script"
Write-Host "    2. Selecciona: scripts/editor/GenerateCompatibleSprites.gd"
Write-Host "    3. Ejecuta el script"
Write-Host "    4. Ve a Project ‚Üí Reload Current Project"
Write-Host "    5. Prueba TestSpriteRobust.tscn de nuevo"
Write-Host ""
Write-Host "  OPCI√ìN B - Visualizaci√≥n inmediata:"
Write-Host "    1. En Godot, abre: scenes/test/CreateTestSprites.tscn"
Write-Host "    2. Presiona F6"
Write-Host "    3. Ver√°s sprites de prueba generados program√°ticamente"
Write-Host ""

Write-Host "üé® QU√â HAR√Å GenerateCompatibleSprites.gd:" -ForegroundColor Magenta
Write-Host "  ‚Ä¢ Genera 4 sprites nuevos de 128x128 pixels"
Write-Host "  ‚Ä¢ wizard_down.png - Mago p√∫rpura mirando hacia abajo"
Write-Host "  ‚Ä¢ wizard_up.png - Mago con capucha (vista trasera)"
Write-Host "  ‚Ä¢ wizard_left.png - Mago de perfil izquierdo"
Write-Host "  ‚Ä¢ wizard_right.png - Mago de perfil derecho"
Write-Host "  ‚Ä¢ Formato PNG compatible garantizado"
Write-Host "  ‚Ä¢ Reemplaza tus archivos actuales"
Write-Host ""

Write-Host "üìÅ RESPALDO DE TUS ARCHIVOS ORIGINALES:" -ForegroundColor Blue
Write-Host "  Creando respaldo de tus PNG originales..."

# Crear directorio de respaldo
$backupDir = "C:\Users\dsuarez1\git\spellloop\project\sprites\wizard\backup_original"
if (-not (Test-Path $backupDir)) {
    New-Item -ItemType Directory -Path $backupDir -Force
    Write-Host "  ‚úÖ Directorio de respaldo creado: $backupDir" -ForegroundColor Green
}

# Copiar archivos originales
$spriteDir = "C:\Users\dsuarez1\git\spellloop\project\sprites\wizard"
$pngFiles = Get-ChildItem -Path $spriteDir -Filter "*.png"

foreach ($file in $pngFiles) {
    $destPath = Join-Path $backupDir $file.Name
    Copy-Item $file.FullName $destPath -Force
    Write-Host "  üì¶ Respaldado: $($file.Name)" -ForegroundColor Green
}

Write-Host ""
Write-Host "‚ö†Ô∏è  NOTA IMPORTANTE:" -ForegroundColor Yellow
Write-Host "  ‚Ä¢ Tus PNG originales est√°n respaldados en: sprites/wizard/backup_original/"
Write-Host "  ‚Ä¢ Los nuevos sprites ser√°n estilo mago p√∫rpura"
Write-Host "  ‚Ä¢ Funcionalmente id√©nticos (4 direcciones)"
Write-Host "  ‚Ä¢ Una vez que funcionen, podemos investigar por qu√© tus originales no cargan"
Write-Host ""

Write-Host "üéØ SIGUIENTE PASO:" -ForegroundColor Green
Write-Host "  1. En Godot: File ‚Üí Run Script ‚Üí GenerateCompatibleSprites.gd"
Write-Host "  2. Project ‚Üí Reload Current Project"  
Write-Host "  3. TestSpriteRobust.tscn (deber√≠a mostrar 4/4 sprites)"
Write-Host "  4. IsaacSpriteViewer.tscn (sprites en el juego)"
Write-Host ""

Write-Host "üéâ ¬°EJECUTA GenerateCompatibleSprites.gd AHORA! üéâ" -ForegroundColor Green